/*
 * main.c
 *
 *  Created on: Nov 22, 2022
 *      Author: hsuankai.chang
 */

#include <stdio.h>
#include <stdint.h>
#include <string.h>

// Definition of a student record
typedef struct
{
	int rollNumber;
	char name[100];
	char branch[100];
	int dob;
	int semister;

}STUDENT_INFO_t;

// Maximum record this program can store
int max_record = 10;

// Global array of records
STUDENT_INFO_t students[10];

//function prototypes of this program
void display_menu(void);
int read_menu_code(void);
void decode_menu_code(int8_t menu_code);
void display_all_records(STUDENT_INFO_t *record, int8_t max_record);
int check_roll_number(int roll_number, STUDENT_INFO_t *record, int8_t max_record);
int add_new_record(STUDENT_INFO_t *record, int8_t max_record);
int delete_record(STUDENT_INFO_t *record, int8_t max_record);


int main()
{
	int8_t menu_code;
	int8_t app_continue = 1;

	printf("Student record management program\n");

	while(app_continue)
	{
		//1. display menu
		display_menu();

		// read the menu code
		menu_code = read_menu_code();

		if(menu_code){
			// decode the menu code
			decode_menu_code(menu_code);
		}else{
			// end the application if menu_code = 0
			app_continue = 0;
			printf("Exiting application\n");
		}
	}
	return 0;
}

/*
 * This function displays the menu to the user
 * Please note that 0 is the code to exit this progam
 */
void display_menu(void)
{
	printf("Display all records    -->1\n");
	printf("Add new record         -->2\n");
	printf("Delete a record        -->3\n");
	printf("Exit application       -->0\n");
	printf("Enter your option here : ");
}

/*
 * This function reads the menu code entered by the user and return the code
 */

int read_menu_code(void)
{
	int input;
	scanf("%d", &input);
	return input;
}


// This function decodes the menu
void decode_menu_code(int8_t menu_code)
{
	int8_t ret;

	switch(menu_code)
	{
		case 1:
			printf("Displaying all students record\n");
			display_all_records(students, max_record);
			break;
		}
		case 2:
			printf("Add a new record\n");
			ret = add_new_record(students, max_record);
			!ret ? printf("Record added unsuccessful\n") : printf("Record added successfully\n");
			break;
		case 3:
			printf("Delete a record\n");
			ret = delete_record(students, max_record);
			ret ? printf("Record deleted successfully\n") : printf("Record not found\n");
			break;
		default:
			printf("Invalid input");
}

/*
 * This function displays all the records so far entered by the user
 * in_param[1] : base address of the records
 * in_param[2] : maximum record number maintained by this program
 */
void display_all_records(STUDENT_INFO_t *record, int8_t max_record)
{
    int record_found = 0;
    for(int i = 0 ; i < max_record ; i++)
    {
        if( record[i].rollNumber)
        {
        	record_found = 1;
            //display the record
            printf("***********\n");
            printf("rollNumber        : %u\n",record[i].rollNumber);
            printf("studentSemister   : %u\n",record[i].semister);
            printf("studentDOB        : %u\n",record[i].dob);
            printf("studentBranch     : %s\n",record[i].branch);
            printf("studentName       : %s\n",record[i].name);
            printf("***********\n");
        }
    }

    if(!record_found)
    	printf("No records found\n");

}




