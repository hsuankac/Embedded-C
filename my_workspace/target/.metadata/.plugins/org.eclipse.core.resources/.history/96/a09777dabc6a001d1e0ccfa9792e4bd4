/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2022 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
	// peripheral register address
	uint32_t volatile *const pGPIODModeReg = (uint32_t*)(0x40020C00);
	uint32_t volatile *const pInputDataReg = (uint32_t*)(0x40020C00+0x10);
	uint32_t volatile *const pOutputDataReg = (uint32_t*)(0x40020C00+0x14);
	uint32_t volatile *const pClockCtrlReg = (uint32_t*)(0x40023800+0x30);
	uint32_t volatile *const pPullupDownReg = (uint32_t*)(0x40020C00+0x0C);

	//1.enable the peripheral clock of GPIOD peripheral
	*pClockCtrlReg |= (1 << 3);

	//2.configure PD0, PD1, PD2, PD3 as output (rows)


    /* Loop forever */
	for(;;);
}
