/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2022 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include "main.h"

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
	RCC_AHB1ENR_t volatile *const pClkCtrlReg   = ADDR_REG_AHB1ENR;
	GPIOx_MODE_t  volatile *const pPortDModeReg = ADDR_REG_GPIOD_MODE;
	GPIOx_ODR_t   volatile *const pPortDOutReg  = ADDR_REG_GPIOD_OD;

	//1. enable the clock for GPOID peripheral in the AHB1ENR (SET the 3rd bit position)
	pClkCtrlReg->gpiod_en = CLOCK_ENABLE;

	//2. configure the mode of the IO pin as output
	pPortDModeReg->pin_12 = 1;

	while(1)
	{
		//Set 12th bit of the output data register to make I/O pin-12 as HIGH
		pPortDOutReg->pin_12  = 1;

		//introduce small human observable delay
		//This loop executes for 300K times
		for(uint32_t i=0 ; i < 300000 ; i++ );

		//Reset 12th bit of the output data register to make I/O pin-12 as LOW
		pPortDOutReg->pin_12  = 0;

		for(uint32_t i=0 ; i < 300000 ; i++ );
	}

	return 0;
}

